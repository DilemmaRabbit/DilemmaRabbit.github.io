<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
    <channel>
        <title>Learning - Category - Dilemma Rabbit</title>
        <link>https://DilemmaRabbit.github.io/categories/learning/</link>
        <description>Learning - Category - Dilemma Rabbit</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>a21663832@gmail.com (dilemmarabbit)</managingEditor>
            <webMaster>a21663832@gmail.com (dilemmarabbit)</webMaster><lastBuildDate>Mon, 07 Mar 2022 21:13:08 &#43;0800</lastBuildDate><atom:link href="https://DilemmaRabbit.github.io/categories/learning/" rel="self" type="application/rss+xml" /><item>
    <title>21. Merge Two Sorted Lists</title>
    <link>https://DilemmaRabbit.github.io/leetcode/21.-merge-two-sorted-lists/</link>
    <pubDate>Mon, 07 Mar 2022 21:13:08 &#43;0800</pubDate><author>a21663832@gmail.com</author><dc:creator>dilemmarabbit</dc:creator><guid>https://DilemmaRabbit.github.io/leetcode/21.-merge-two-sorted-lists/</guid>
    <description><![CDATA[難度：🟢 Easy 🟢
 問題描述 給定兩條已排序的 linked list，合併為一條排序的 linked list
測資
 每條 node 數量 &lt; 50 -100 &lt;= Node.val &lt;= 100   思路 產生一個新的list head，用兩個 pointer 紀錄目前 list1 與 list2 位置，並比較大小決定下一個節點，直到其中一條結束，再由另一條補上
 程式碼 class Solution { public: ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) { ListNode *list=NULL; ListNode *head=NULL; ListNode *tmp=NULL; if(list1==NULL){ return list2; } if(list2==NULL){ return list1; } while(list1!=NULL &amp;&amp; list2!=NULL){ if(list1 -&gt; val &gt;= list2 -&gt; val){ tmp = list2; list2 = list2 -&gt; next; tmp-&gt;next = NULL; } else{ tmp = list1; list1 = list1 -&gt; next; tmp-&gt;next = NULL; } if(head==NULL){ head = tmp; list = tmp; } else{ list -&gt; next = tmp; list = list -&gt; next; } if(list1 == NULL || list2 == NULL){ break; } } if(list1){ list-&gt;next=list1; } if(list2){ list-&gt;next=list2; } return head; } };  ]]></description>
</item><item>
    <title>258 Add Digits</title>
    <link>https://DilemmaRabbit.github.io/leetcode/no.258-add-digits/</link>
    <pubDate>Tue, 08 Feb 2022 16:04:48 &#43;0800</pubDate><author>a21663832@gmail.com</author><dc:creator>dilemmarabbit</dc:creator><guid>https://DilemmaRabbit.github.io/leetcode/no.258-add-digits/</guid>
    <description><![CDATA[難度：🟢 Easy 🟢
 問題描述 將一個正整數的所有位數做加總，直到只剩下個位數，並返回該值。
測資 -1 &lt; num &lt; 2^32 。
 思路 只計算當次的個位數，如果大於 10 代表只保留個位數並 +1，算至最後 num 為 0 。
 程式碼 class Solution { public: int addDigits(int num) { int cur = 0; // initial answer  while(num != 0){ cur += num%10; // add tail number  if(cur &gt;= 10){ // if cur &gt; 0, remain tail and + 1  cur = cur % 10 + 1; } num /= 10; } return cur; } }; ]]></description>
</item><item>
    <title>Hugo x GitHub Pages 架設紀錄</title>
    <link>https://DilemmaRabbit.github.io/posts/hugo-x-github-page-%E6%9E%B6%E8%A8%AD%E7%B4%80%E9%8C%84/</link>
    <pubDate>Sun, 02 Jan 2022 15:31:23 &#43;0800</pubDate><author>a21663832@gmail.com</author><dc:creator>dilemmarabbit</dc:creator><guid>https://DilemmaRabbit.github.io/posts/hugo-x-github-page-%E6%9E%B6%E8%A8%AD%E7%B4%80%E9%8C%84/</guid>
    <description><![CDATA[前言 終於把 Hugo 跟 GitHub Pages 成功架起來了(就是你現在在看的東西🥳)，途中不知道刪了幾次 repo，也遇到了不少 Hugo 以外的問題，除了學習 Hugo 外也重新把 git 的一些相關知識重新認識了一遍，不過途中還是有遇到目前原因不明但解決的問題，會列在下面的採坑集跟延伸學習裡面，如果有解決方法不吝指教～
I. 先前準備 環境 系統: ubuntu 20.04
Github Page 建立 1. 建立一個名稱為 username.github.io 的 repo 2. 從 github clone 到本機 git clone &lt;username.github.io&gt;  II. 本機建立網站 Hugo 安裝 brew 安裝 brew 安裝教學
1. 透過 brew 安裝 Hugo brew install hugo 建立一個新的網頁 1. 目標資料夾下建立一個新的網頁 hugo new site &lt;username.github.io&gt; hugo new site &lt;username.github.io&gt; --force # 如果資料夾內有其他資料則需要強制建立 (e.g.README) Hugo 主題安裝 1.]]></description>
</item></channel>
</rss>
